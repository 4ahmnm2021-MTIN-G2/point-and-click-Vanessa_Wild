<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_inventory</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///variables

show = 1;
hover = 0;
timer = 120;

image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///show/hide inventory

if position_meeting(mouse_x,mouse_y,self){
    hover = 1;
}
else{
    hover = 0;
}


if !position_meeting(mouse_x,mouse_y,obj_vegparent)
{
if hover = 1 &amp;&amp; mouse_check_button_pressed(mb_left){
    show = 1;
    timer = 120;
}

if hover = 0 &amp;&amp; mouse_check_button_pressed(mb_left){
    show = 0;
    timer = 0;
}
}

if position_meeting(mouse_x,mouse_y,obj_vegparent)
{
if hover = 1 &amp;&amp; mouse_check_button_pressed(mb_left){
    show = 1;
    timer = 120;
}

if hover = 0 &amp;&amp; mouse_check_button_pressed(mb_left){
    show = 1;
    timer = 120;
}
}

timer -= 1;

if timer &lt; 0 {show = 0}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw inventory sprite

if hover = false
{
draw_sprite(spr_inventory,0,x,y)
}

if hover = true and show = 1
{
draw_sprite(spr_inventory,0,x,y)
}

if hover = true and show = 0
{
draw_sprite(spr_inventory,1,x,y)
}


    if show = 1{
        y -= distance_to_point(x,ystart-24)/4;
    }    
    if show = 0{
        y += distance_to_point(x,ystart+17)/4;
    }    
    if y &lt;= ystart {y = ystart}

    
    
if global.carrot = true
{draw_sprite(spr_inventory,2,x,y)}

if global.celery = true
{draw_sprite(spr_inventory,3,x,y)}

if global.parsley = true
{draw_sprite(spr_inventory,4,x,y)}

if global.potato = true
{draw_sprite(spr_inventory,5,x,y)}

if global.mush = true
{draw_sprite(spr_inventory,6,x,y)}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
